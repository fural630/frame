<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="com.module.system.dao.RoleDao">  
     
    <insert id="insertRole" parameterType="Role">  
        insert into role (
        	role_name,
        	description,
        	create_time,
        	update_time,
        	log,
        	creator,
        	updateor
        ) values(
        	#{roleName},
        	#{description},
        	#{createTime},
        	#{updateTime},
        	#{log},
        	#{creator},
        	#{updateor}
        )  
    </insert>  
    
    <update id="updateRole" parameterType="Role">  
        update role t 
        <set>
        	<if test="roleName!=null and roleName !=''">
				role_name = #{roleName},
        	</if>
        	<if test="description!=null and description !=''">
				description = #{description},
        	</if>
        	<if test="createTime!=null and createTime !=''">
				create_time = #{createTime},
        	</if>
        	<if test="updateTime!=null and updateTime !=''">
				update_time = #{updateTime},
        	</if>
        	<if test="log!=null and log !=''">
				log = #{log}, 	
        	</if>
        	<if test="creator!=null and creator !=''">
				creator = #{creator}, 	
        	</if>
        	<if test="updateor!=null and updateor !=''">
				updateor = #{updateor}, 	
        	</if>
        </set>
        where id = #{id}
    </update>  
    
    <delete id="deleteRoleById" parameterType="int">  
        delete from role where id = #{id}  
    </delete>  
       
    <select id="getRoleById" parameterType="int" resultType="Role">  
        select * from role where id = #{id}  
    </select>
    
    <select id="findAll" resultType="Role">  
        select * from role  
    </select>  
    
    <select id="getRolePage" resultType="hashMap" parameterType="Page">
    	select * from role t
    	<where>
	    	<choose>
				<when test="params.roleNameLike!=null and params.roleNameLike!='' ">
					and t.roleName like CONCAT('%','${params.roleName}','%')  
				</when>
				<when test="params.roleName!=null and params.roleName!=''">
					and t.roleName = #{params.roleName}
				</when> 		
	   		</choose>
	   		<if test="params.creator!=null and params.creator !=''">
	 			and t.creator = #{params.creator}
	   		</if>
	   		<if test="params.updateor!=null and params.updateor !=''">
	    		and t.updateor = #{params.updateor}
	   		</if>
	   		
	   		<if test="params.timeQuery == 'createTime' and params.timeFrom !=null and params.timeFrom!=''" >
	   			<![CDATA[ and t.createTime >= #{params.timeFrom} ]]>
	   		</if>
	   		
	   		<if test="params.timeQuery == 'createTime' and params.timeTo !=null and params.timeTo!=''" >
	   			<![CDATA[ and t.createTime <= #{params.timeTo} ]]>
	   		</if>
	   		
		    <if test="params.timeQuery == 'updateTime' and params.timeFrom !=null and params.timeFrom!=''" >
	   			<![CDATA[ and t.updateTime >= #{params.timeFrom} ]]>
	   		</if>
	   		
	   		<if test="params.timeQuery == 'updateTime' and params.timeTo !=null and params.timeTo!=''" >
	   			<![CDATA[ and t.updateTime <= #{params.timeTo} ]]>
	   		</if>
   		</where>
   		order by t.id desc
    </select>
      
</mapper>  