<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="com.module.product.dao.ProductDao">
	
    <select id="getProductPage" resultType="hashMap" parameterType="Page">
    	select * from product t
    	<where>
	    	<choose>
				<when test="params.skuLike!=null and params.skuLike!='' ">
					and t.sku like CONCAT('%','${params.sku}','%')  
				</when>
				<when test="params.sku !=null and params.sku !=''">
					and t.sku = #{params.sku}
				</when>
	   		</choose>
	   		<choose>
				<when test="params.spuLike!=null and params.spuLike!='' ">
					and t.spu like CONCAT('%','${params.spu}','%')  
				</when>
				<when test="params.spu!=null and params.spu!=''">
					and t.spu = #{params.spu}
				</when>
	   		</choose>
	   		
   			<choose>
	   			<when test="params.productNameQuery !='' and params.productNameQuery == 'nameCn' ">
	   				<choose>
						<when test="params.productNameValueLike!=null and params.productNameValueLike!='' ">
							and t.nameCn like CONCAT('%','${params.productNameValue}','%')  
						</when>
						<when test="params.productNameValue!=null and params.productNameValue!=''">
							and t.nameCn = #{params.productNameValue}
						</when>
	   				</choose>
				</when>
				<when test="params.productNameQuery !='' and params.productNameQuery == 'nameEn' ">
					<choose>
						<when test="params.productNameValueLike!=null and params.productNameValueLike!='' ">
							and t.nameEn like CONCAT('%','${params.productNameValue}','%')  
						</when>
						<when test="params.productNameValue!=null and params.productNameValue!=''">
							and t.nameEn = #{params.productNameValue}
						</when>
	   				</choose>
				</when>
 			</choose>
	   		
	   		<if test="params.productUserQuery != null and params.productUserQuery !='' and params.userSelect != ''">
	   			<choose>
					<when test="params.productUserQuery == 'creator'">
						and t.creatorId = ${params.userSelect}
					</when>
					<when test="params.productUserQuery == 'editor' ">
						and t.editorId = #{params.userSelect}
					</when>
					<when test="params.productUserQuery == 'publishUser' ">
						and t.publishUserId = #{params.userSelect}
					</when>
		   		</choose>
	   		</if>
	   		
	   		<choose>
				<when test="params.colorLike!=null and params.colorLike!='' ">
					and t.color like CONCAT('%','${params.color}','%')  
				</when>
				<when test="params.color!=null and params.color!=''">
					and t.color = #{params.color}
				</when>
	   		</choose>
	   		
	   		<choose>
				<when test="params.productSizeLike!=null and params.productSizeLike!='' ">
					and t.size like CONCAT('%','${params.productSize}','%')  
				</when>
				<when test="params.productSize!=null and params.productSize!=''">
					and t.size = #{params.productSize}
				</when>
	   		</choose>
	   		
	   		<if test="params.auditStatus!=null and params.auditStatus !=''">
	    		and t.auditStatus = #{params.auditStatus}
	   		</if>
	   		<if test="params.createTimeFrom !=null and params.createTimeFrom !=''" >
	   			<![CDATA[ and t.createTime >= #{params.createTimeFrom} ]]>
	   		</if>
	   		<if test="params.createTimeTo !=null and params.createTimeTo!=''" >
	   			<![CDATA[ and t.createTime <= #{params.createTimeTo} ]]>
	   		</if>
	   		
	   		<if test="params._roleLevel &lt; 10" >
	   			and t.creatorId = #{params._userId} or t.editorId = #{params._userId}
	   		</if>
	   		
   		</where>
   		order by t.id desc
    </select>
    
    <insert id="insertProduct" parameterType="Product" useGeneratedKeys="true" keyProperty="id">
    	insert into product (
			sku,
			spu,
			nameCn,
			nameEn,
			nameFr,
			nameDe,
			nameIt,
			nameJp,
			nameEs,
			declarationNameCn,
			declarationNameEn,
			purchasePrice,
			purchaseUrl,
			purchaseNotes,
			salesNotes,
			packageWeight,
			packageWidth,
			packageHeight,
			packageLength,
			descriptionCn,
			descriptionEn,
			descriptionFr,
			descriptionDe,
			descriptionJp,
			descriptionEs,
			descriptionIt,
			briefDescriptionCn,
			briefDescriptionEn,
			briefDescriptionFr,
			briefDescriptionDe,
			briefDescriptionJp,
			briefDescriptionEs,
			briefDescriptionIt,
			mainImage,
			optionLog,
			creatorId,
			auditStatus,
			createTime,
			updateTime,
			size,
			color
   		) values (
   			#{sku},
			#{spu},
			#{nameCn},
			#{nameEn},
			#{nameFr},
			#{nameDe},
			#{nameIt},
			#{nameJp},
			#{nameEs},
			#{declarationNameCn},
			#{declarationNameEn},
			#{purchasePrice},
			#{purchaseUrl},
			#{purchaseNotes},
			#{salesNotes},
			#{packageWeight},
			#{packageWidth},
			#{packageHeight},
			#{packageLength},
			#{descriptionCn},
			#{descriptionEn},
			#{descriptionFr},
			#{descriptionDe},
			#{descriptionJp},
			#{descriptionEs},
			#{descriptionIt},
			#{briefDescriptionCn},
			#{briefDescriptionEn},
			#{briefDescriptionFr},
			#{briefDescriptionDe},
			#{briefDescriptionJp},
			#{briefDescriptionEs},
			#{briefDescriptionIt},
			#{mainImage},
			#{optionLog},
			#{creatorId},
			#{auditStatus},
			#{createTime},
			#{updateTime},
			#{size},
			#{color}
   		)
    </insert>
    
    <insert id="insertProductImage" parameterType="hashMap">
    	insert into product_image (
    		productId,
    		imageUrl
   		) values 
   		<foreach item="item" index="index" collection="imageList" separator=",">  
			(#{productId}, #{item})  
		</foreach> 
    		
    </insert>
    
    <select id="getProductById" parameterType="int" resultType="Product">
    	select * from product where id = #{id};
    </select>
    
    <select id="getProductImage" parameterType="int" resultType="string">
    	select t.imageUrl from product_image t where productId = #{productId}
    </select>
    
    <update id="updateProduct" parameterType="Product">
    	update product 
    	<set>
       		<if test="sku !=null and sku !=''">
				sku = #{sku},
			</if>
			<if test="spu !=null and spu !=''">
				spu = #{spu},
			</if>
			<if test="nameCn !=null and nameCn !=''">
				nameCn = #{nameCn},
			</if>
			<if test="nameEn !=null and nameEn !=''">
				nameEn = #{nameEn},
			</if>
			<if test="nameFr !=null and nameFr !=''">
				nameFr = #{nameFr},
			</if>
			<if test="nameDe !=null and nameDe !=''">
				nameDe = #{nameDe},
			</if>
			<if test="nameIt !=null and nameIt !=''">
				nameIt = #{nameIt},
			</if>
			<if test="nameJp !=null and nameJp !=''">
				nameJp = #{nameJp},
			</if>
			<if test="nameEs !=null and nameEs !=''">
				nameEs = #{nameEs},
			</if>
			<if test="declarationNameCn !=null and declarationNameCn !=''">
				declarationNameCn = #{declarationNameCn},
			</if>
			<if test="declarationNameEn !=null and declarationNameEn !=''">
				declarationNameEn = #{declarationNameEn},
			</if>
			<if test="purchasePrice !=null and purchasePrice !=''">
				purchasePrice = #{purchasePrice},
			</if>
			<if test="purchaseUrl !=null and purchaseUrl !=''">
				purchaseUrl = #{purchaseUrl},
			</if>
			<if test="purchaseNotes !=null and purchaseNotes !=''">
				purchaseNotes = #{purchaseNotes},
			</if>
			<if test="salesNotes !=null and salesNotes !=''">
				salesNotes = #{salesNotes},
			</if>
			<if test="packageWeight !=null and packageWeight !=''">
				packageWeight = #{packageWeight},
			</if>
			<if test="packageWidth !=null and packageWidth !=''">
				packageWidth = #{packageWidth},
			</if>
			<if test="packageHeight !=null and packageHeight !=''">
				packageHeight = #{packageHeight},
			</if>
			<if test="packageLength !=null and packageLength !=''">
				packageLength = #{packageLength},
			</if>
			<if test="descriptionCn !=null and descriptionCn !=''">
				descriptionCn = #{descriptionCn},
			</if>
			<if test="descriptionEn !=null and descriptionEn !=''">
				descriptionEn = #{descriptionEn},
			</if>
			<if test="descriptionFr !=null and descriptionFr !=''">
				descriptionFr = #{descriptionFr},
			</if>
			<if test="descriptionDe !=null and descriptionDe !=''">
				descriptionDe = #{descriptionDe},
			</if>
			<if test="descriptionJp !=null and descriptionJp !=''">
				descriptionJp = #{descriptionJp},
			</if>
			<if test="descriptionEs !=null and descriptionEs !=''">
				descriptionEs = #{descriptionEs},
			</if>
			<if test="descriptionIt !=null and descriptionIt !=''">
				descriptionIt = #{descriptionIt},
			</if>
			<if test="briefDescriptionCn !=null and briefDescriptionCn !=''">
				briefDescriptionCn = #{briefDescriptionCn},
			</if>
			<if test="briefDescriptionEn !=null and briefDescriptionEn !=''">
				briefDescriptionEn = #{briefDescriptionEn},
			</if>
			<if test="briefDescriptionFr !=null and briefDescriptionFr !=''">
				briefDescriptionFr = #{briefDescriptionFr},
			</if>
			<if test="briefDescriptionDe !=null and briefDescriptionDe !=''">
				briefDescriptionDe = #{briefDescriptionDe},
			</if>
			<if test="briefDescriptionJp !=null and briefDescriptionJp !=''">
				briefDescriptionJp = #{briefDescriptionJp},
			</if>
			<if test="briefDescriptionEs !=null and briefDescriptionEs !=''">
				briefDescriptionEs = #{briefDescriptionEs},
			</if>
			<if test="briefDescriptionIt !=null and briefDescriptionIt !=''">
				briefDescriptionIt = #{briefDescriptionIt},
			</if>
			<if test="mainImage !=null and mainImage !=''">
				mainImage = #{mainImage},
			</if>
			<if test="optionLog !=null and optionLog !=''">
				optionLog = #{optionLog},
			</if>
			<if test="editorId !=null and editorId !=''">
				editorId = #{editorId},
			</if>
			<if test="publishUserId !=null and publishUserId !=''">
				publishUserId = #{publishUserId},
			</if>
			<if test="auditStatus !=null and auditStatus !=''">
				auditStatus = #{auditStatus},
			</if>
			<if test="updateTime !=null and updateTime !=''">
				updateTime = #{updateTime},
			</if>
			<if test="creatorId !=null and creatorId !=''">
				creatorId = #{creatorId},
			</if>
			<if test="createTime !=null and createTime !=''">
				createTime = #{createTime},
			</if>
			<if test="size !=null and size !=''">
				size = #{size},
			</if>
			<if test="color !=null and color !=''">
				color = #{color},
			</if>
       	</set>
        where id = #{id}   
    </update>
    
    <delete id="deleteProductImageByProductId" parameterType="int">
    	delete from product_image where productId = #{productId}
    </delete>
    
    <delete id="deleteProductById" parameterType="int">
    	delete from product where id = #{id}
    </delete>
    
    <select id="getProductEditUser" parameterType="int" resultType="int">
    	select editorId from product where id = #{productId}
    </select>
    
    <select id="getProductPublishUser" parameterType="int" resultType="int">
    	select publishUserId from product where id = #{productId}
    </select>
    
    <update id="saveProductEditUser">
    	update product set 
    		editorId = #{userId}
    	where id = #{productId}
    </update>
    
     <update id="saveProductPublishUser">
    	update product set 
    		publishUserId = #{userId}
    	where id = #{productId}
    </update>
    
    <select id="getProductAuditListByProductId" parameterType="int" resultType="ProductAudit">
    	select t.*,tt.name as userName from product_audit t 
    		left join user tt on t.userId = tt.id 
    	where t.productId = #{productId}
    </select>
    
    <insert id="insertProductAudit" parameterType="ProductAudit">
    	insert into product_audit (
    		userId,
    		productId,
    		comment,
    		createTime
    	) values (
    		#{userId},
    		#{productId},
    		#{comment},
    		#{createTime}
    	)
    </insert>
    
    <select id="getProductBySku" parameterType="string" resultType="Product">
    	select * from product where sku = #{sku}
    </select>
    
    <update id="updateProductAuditStatus">
    	update product set auditStatus = #{status}
    		where id = #{productId}
    </update>
    
    <select id="getProductAuditStatus" parameterType="int" resultType="int">
    	select auditStatus from product where id = #{productId}
    </select>
</mapper>